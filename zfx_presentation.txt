Etwas verspaetet, hier mein Beitrag zur ZFX–Action.


[size=150]Kurz[/size]
<> ist ein kurzweiliger, actionbasiertes Jump'n'Run-Spiel in ASCII-Art. 

[size=150]Screenshots[/size]

[size=150]Beschreibung[/size]

[size=150]Technik[/size]
Das Projekt ist nahezu vollstaendig in Python 3 (v3.1) entstanden. Leider entstand somit eine Abhaengigkeit von der Python–Runtime, die in der erforderliche Version nur selten installiert ist. Als Framework kommt SFML, Release 1.5, zum Einsatz, das zwar veraltet ist, jedoch ueber funktionstuechtige Python–Wrapper verfuegt. Damit waere eigentlich die Notwendigkeit entstanden den End–User auch noch selbige Bindings einrichten zu lassen, fuer nicht Python–Kenner eine eher unlustige Sache.

Daher habe ich mich dafuer entschieden, die Python Runtime komplett einzubetten, was gluecklicherweise nicht sonderlich muehsam ist. Der eher kurze C++–Teil des Programms dient als Bootstrapper, d.h. er initialisiert Python und startet das eigentliche Spiel. Selbiges besteht aus ca. ~3.5kLOC.

Das Spiel war urspruenglich Tile-basiert, ist aber in der vorliegenden Version im Prinzip voellig frei konfigurierbar und nicht an bestimmte Groeßen oder Positionen gebunden – siehe die mitgelieferten Level. Das Leveldesign erfolgt, wie ueblich, in Form von ganz normalen Textdateien, die eine Art Minimap aller Elemente im jwlg. Level bilden. Ein Eintrag besteht aus einem Farbcode (z.B. faerbt ‘r’ ein Element Rot) sowie einem aus zwei Zeichen bestehenden Typcode, der direkt einer gleichnamigen Datei entspricht. Diese definiert dann das Aussehen des entsprechenden Elementes und verweist auf eine dynamisch ladbare Klasse, die die Implementierung des gewuenschten Verhaltens - sofern das Standardverhalten nicht ausreichend ist - uebernimmt. Insgesamt eine nette Anwendung fuer eine dynamische Sprache wie Python, insofern bereue ich die Wahl trotz der geschilderten Probleme nicht.

Da alle verwendeten Komponenten portabel sind, steht einer Portierung auf Linux/Mac nichts entgegen. Aus Zeitmangel habe ich mich bislang aber dagegen entschieden, d.h. es gibt nur eine Windows-Version :-) 

[size=150]Team[/size]
[i]Programmierung:[/i]
Alexander Gessler (Ich)

[i]Leveldesign & Quality Assurance[/i]
Tizian Wieland
Tobias Rittig
Jolanda Roessner
Tobias Riedel
Alexander Gessler

[size=150]Downloads[/size]

[Binaries, Windows 2k+, x86] (6.87 MiB, ZIP)
[Quellcode, ohne SFML und Python] (6.87 MiB, ZIP)
[Abhaengigkeiten] (6.87 MiB, ZIP)

[size=150]Bekannte Probleme[/size]

[list]
[*]Auf manchen Systemen kommt es beim Beenden zu einem Absturz in den Tiefen von SFML. Bislang nur auf NVidia-Hardware beobachtet, ein Zusammenhang ist wahrscheinlich.
[*]Auf leistungsschwachen Systemen kann es zu Performanceproblemen in großen Levels kommen, ‘optimiert’ ist was anderes.
[/list]

[size=150]Troubleshooting/Mini–FAQ[/size]

[i]Startet nicht, ‘Anwendungskonfiguration nicht korrekt’ oder ‘msXXXXX.dll konnte nicht gefunden werden’[/i]
Die Visual C++ Runtime fuer VC9, x86 installieren.

[i]WINE?[/i]
Nicht getestet bislang, koennte durchaus klappen).

[i][/i]