
#undef ENABLE_DITHER

texture framebuffer = {FRAMEBUFFER}

#ifndef NO_INTENSE_PPFX
vec2 cur = {PLAYER_POS}


#endif

#ifdef ENABLE_DITHER
texture noise = ../data/textures/noise.png
vec2 randomUV = {RANDOM}
float dither_strength = {DITHER_STRENGTH}
#endif

effect
{
#ifdef NO_INTENSE_PPFX
	vec4 pixel = framebuffer(_in);
	_out.rgba = pixel.rgba;
#else

	vec2 tin = _in;
	float scale =  clamp((length( (tin-cur) / (16.0/9.0) ))*1.35,0.0,1.0);

	// XXX compilation fails if these statements are put on one line, SFML what do you do?
	vec4 pixel = framebuffer(tin);
	vec4 another = framebuffer(tin+vec2(-0.005,-0.005));
	vec4 notthis = framebuffer(tin+vec2( 0.005,-0.005));
	vec4 evenmor = framebuffer(tin+vec2(-0.005, 0.005));
	vec4 lastsam = framebuffer(tin+vec2(0.005, -0.005));
	
#ifdef ENABLE_DITHER
	vec4 dither = noise(randomUV-vec2(0.5,0.5)+tin);
#endif

	float blue_treshold = 0.0;
	vec4 color = mix(pixel, (pixel+another+notthis+evenmor+lastsam)*0.2, scale);
	
	for (int i = -2; i <= 2; ++i) {
		for (int j = -2; j <= 2; ++j) {
		 float f = dot(framebuffer(tin + vec2(0.0019 * i,0.0019 * j)).rgb, vec3(1.0,1.0,-2.0));
		 blue_treshold += f*f;
		}
	}
    if(blue_treshold > 50.0f*0.25) {
		color *= vec4(0.2,0.2,0.9,1.0);
	}
	
	
	_out.rgb = color.rgb * clamp(1.f-scale+0.25,0.0,1.0);

#ifdef ENABLE_DITHER
	_out.rgb += (dither.rgb-0.5f)*0.0200 * dither_strength * scale;
#endif

	_out.rgb = mix(vec3( dot(_out.rgb,vec3(0.5f,0.3f,0.2f)) ),_out.rgb,0.8f);
	_out.a = 1.f;

#endif
}

