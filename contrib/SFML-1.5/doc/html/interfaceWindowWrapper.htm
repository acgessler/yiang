<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
    <head>
        <title>SFML - Simple and Fast Multimedia Library</title>
        <meta http-equiv="Content-Type" content="text/html;charset=UTF-8" />
        <link href="doxygen.css" rel="stylesheet" type="text/css" />
        <link href="tabs.css" rel="stylesheet" type="text/css" />
    </head>
    <body>
        <div id="logo">
            <img src="./logo.jpg" width="770" height="200" title="SFML home" alt="SFML logo" />
        </div>
<!-- Generated by Doxygen 1.5.8 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="annotated.htm"><span>Class&nbsp;List</span></a></li>
      <li><a href="classes.htm"><span>Class&nbsp;Index</span></a></li>
      <li><a href="hierarchy.htm"><span>Class&nbsp;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&nbsp;Members</span></a></li>
    </ul>
  </div>
</div>
<div class="contents">
<h1>WindowWrapper Class Reference</h1><!-- doxytag: class="WindowWrapper" --><a class="el" href="interfaceWindowWrapper.htm" title="WindowWrapper class : handles both imported and self-built windows.">WindowWrapper</a> class : handles both imported and self-built windows.  
<a href="#_details">More...</a>
<p>
<code>#import &lt;<a class="el" href="GLKit_8h-source.htm">GLKit.h</a>&gt;</code>
<p>

<p>
<a href="classWindowWrapper-members.htm">List of all members.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">(id)&nbsp;</td><td class="memItemRight" valign="bottom">- <a class="el" href="interfaceWindowWrapper.htm#f22be7e975323c6bd6f17508a46ec335">initWithSettings:videoMode:style:title:delegate:</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Make a new window wrapper according to the window settings , the video mode , the window style , the window title  and the sf window implementation delegate .  <a href="#f22be7e975323c6bd6f17508a46ec335"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">(id)&nbsp;</td><td class="memItemRight" valign="bottom">- <a class="el" href="interfaceWindowWrapper.htm#16a188d9f72e104f42847576b5d4e6c4">initWithWindow:settings:delegate:</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Make a new window wrapper by importing  and according to the window settings  and the sf window implementation delegate   and  must not be null.  <a href="#16a188d9f72e104f42847576b5d4e6c4"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">(id)&nbsp;</td><td class="memItemRight" valign="bottom">- <a class="el" href="interfaceWindowWrapper.htm#3e51f55f41fb1cb215f4131c27e546c5">initWithWindow:settings:videoMode:style:title:delegate:</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Make a new window wrapper by importing  if it's not null and according to the window settings  and the sf window implementation delegate ; or by creating a new window if  is null.  <a href="#3e51f55f41fb1cb215f4131c27e546c5"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">(NSWindow *)&nbsp;</td><td class="memItemRight" valign="bottom">- <a class="el" href="interfaceWindowWrapper.htm#220a751d6f28e154784667bf0b0d75c2">window</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Return a reference to the internal Cocoa window.  <a href="#220a751d6f28e154784667bf0b0d75c2"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">(<a class="el" href="interfaceGLView.htm">GLView</a> *)&nbsp;</td><td class="memItemRight" valign="bottom">- <a class="el" href="interfaceWindowWrapper.htm#0d469037a9b76a5bacb60ddac7e0b84b">glView</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Return a reference to the internal Cocoa OpenGL view.  <a href="#0d469037a9b76a5bacb60ddac7e0b84b"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">(void)&nbsp;</td><td class="memItemRight" valign="bottom">- <a class="el" href="interfaceWindowWrapper.htm#e0d490eb68593290a188195ab713e230">setPosition:</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Forward call to set the window position on screen.  <a href="#e0d490eb68593290a188195ab713e230"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">(void)&nbsp;</td><td class="memItemRight" valign="bottom">- <a class="el" href="interfaceWindowWrapper.htm#f0748c0976f814e0891fd52eb1f641e4">setSize:</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Forward call to set the window size.  <a href="#f0748c0976f814e0891fd52eb1f641e4"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">(NSPoint)&nbsp;</td><td class="memItemRight" valign="bottom">- <a class="el" href="interfaceWindowWrapper.htm#1d42a80d67788f419e84a243128b56b7">mouseLocation</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Return the mouse location relative to the internal window.  <a href="#1d42a80d67788f419e84a243128b56b7"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">(BOOL)&nbsp;</td><td class="memItemRight" valign="bottom">- <a class="el" href="interfaceWindowWrapper.htm#d7e57f85ddd9cabcfd83b6b3e4126f5b">mouseInside</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Return whether the mouse is on our window.  <a href="#d7e57f85ddd9cabcfd83b6b3e4126f5b"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">(void)&nbsp;</td><td class="memItemRight" valign="bottom">- <a class="el" href="interfaceWindowWrapper.htm#2f0777388a4da1415aac51879ab05597">show:</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Close or open the window.  <a href="#2f0777388a4da1415aac51879ab05597"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">(void)&nbsp;</td><td class="memItemRight" valign="bottom">- <a class="el" href="interfaceWindowWrapper.htm#4995cfd86e5eab2cfed22696940bd331">enableVerticalSync:</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Forward call to en/disable the OpenGL view vertical synchronization.  <a href="#4995cfd86e5eab2cfed22696940bd331"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">(void)&nbsp;</td><td class="memItemRight" valign="bottom">- <a class="el" href="interfaceWindowWrapper.htm#b8dd2a8037d3ad624e165fb46cd3ee76">setActive:</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Forward 'setActive' call the the OpenGL view.  <a href="#b8dd2a8037d3ad624e165fb46cd3ee76"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">(void)&nbsp;</td><td class="memItemRight" valign="bottom">- <a class="el" href="interfaceWindowWrapper.htm#992761df449913495c29f6160338cf62">flushBuffer</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Forward call to flush the OpenGL view.  <a href="#992761df449913495c29f6160338cf62"></a><br></td></tr>
<tr><td colspan="2"><br><h2>Protected Attributes</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="6f9a2e71387971cf842f5a3be4f7136c"></a><!-- doxytag: member="WindowWrapper::myWindow" ref="6f9a2e71387971cf842f5a3be4f7136c" args="" -->
<a class="el" href="interfaceGLWindow.htm">GLWindow</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><b>myWindow</b></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="dc5701811502b9fe1cda4bfdc6b9d602"></a><!-- doxytag: member="WindowWrapper::myView" ref="dc5701811502b9fe1cda4bfdc6b9d602" args="" -->
<a class="el" href="interfaceGLView.htm">GLView</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><b>myView</b></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="1c3cb1d71837aece42235d091a86149d"></a><!-- doxytag: member="WindowWrapper::myFullscreenMode" ref="1c3cb1d71837aece42235d091a86149d" args="" -->
<a class="el" href="classsf_1_1VideoMode.htm">sf::VideoMode</a>&nbsp;</td><td class="memItemRight" valign="bottom"><b>myFullscreenMode</b></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="05c41d7f79b589b5c5de5920520d7d14"></a><!-- doxytag: member="WindowWrapper::myIsFullscreen" ref="05c41d7f79b589b5c5de5920520d7d14" args="" -->
bool&nbsp;</td><td class="memItemRight" valign="bottom"><b>myIsFullscreen</b></td></tr>

</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
<a class="el" href="interfaceWindowWrapper.htm" title="WindowWrapper class : handles both imported and self-built windows.">WindowWrapper</a> class : handles both imported and self-built windows. 
<p>Definition at line <a class="el" href="GLKit_8h-source.htm#l00115">115</a> of file <a class="el" href="GLKit_8h-source.htm">GLKit.h</a>.</p>
<hr><h2>Member Function Documentation</h2>
<a class="anchor" name="4995cfd86e5eab2cfed22696940bd331"></a><!-- doxytag: member="WindowWrapper::enableVerticalSync:" ref="4995cfd86e5eab2cfed22696940bd331" args="(bool flag)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">- (void) enableVerticalSync:           </td>
          <td></td>
          <td class="paramtype">(bool)&nbsp;</td>
          <td class="paramname"> <em>flag</em>          </td>
          <td>&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Forward call to en/disable the OpenGL view vertical synchronization. 
<p>

<p>Definition at line <a class="el" href="GLKit_8mm-source.htm#l00779">779</a> of file <a class="el" href="GLKit_8mm-source.htm">GLKit.mm</a>.</p>

</div>
</div><p>
<a class="anchor" name="992761df449913495c29f6160338cf62"></a><!-- doxytag: member="WindowWrapper::flushBuffer" ref="992761df449913495c29f6160338cf62" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">- (void) flushBuffer           </td>
          <td></td>
          <td class="paramname">          </td>
          <td>&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Forward call to flush the OpenGL view. 
<p>

<p>Definition at line <a class="el" href="GLKit_8mm-source.htm#l00799">799</a> of file <a class="el" href="GLKit_8mm-source.htm">GLKit.mm</a>.</p>

</div>
</div><p>
<a class="anchor" name="0d469037a9b76a5bacb60ddac7e0b84b"></a><!-- doxytag: member="WindowWrapper::glView" ref="0d469037a9b76a5bacb60ddac7e0b84b" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">- (<a class="el" href="interfaceGLView.htm">GLView</a> *) glView           </td>
          <td></td>
          <td class="paramname">          </td>
          <td>&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Return a reference to the internal Cocoa OpenGL view. 
<p>

<p>Definition at line <a class="el" href="GLKit_8mm-source.htm#l00673">673</a> of file <a class="el" href="GLKit_8mm-source.htm">GLKit.mm</a>.</p>

</div>
</div><p>
<a class="anchor" name="f22be7e975323c6bd6f17508a46ec335"></a><!-- doxytag: member="WindowWrapper::initWithSettings:videoMode:style:title:delegate:" ref="f22be7e975323c6bd6f17508a46ec335" args="(sf::WindowSettings &amp;attribs,[videoMode] sf::VideoMode &amp;mode,[style] unsigned long style,[title] NSString *title,[delegate] sf::priv::WindowImplCocoa *delegate)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">- (id) initWithSettings:           </td>
          <td></td>
          <td class="paramtype">(<a class="el" href="structsf_1_1WindowSettings.htm">sf::WindowSettings</a>&amp;)&nbsp;</td>
          <td class="paramname"> <em>attribs</em></td>
        </tr>
        <tr>
          <td class="paramkey">videoMode:</td>
          <td></td>
          <td class="paramtype">(<a class="el" href="classsf_1_1VideoMode.htm">sf::VideoMode</a>&amp;)&nbsp;</td>
          <td class="paramname"> <em>mode</em></td>
        </tr>
        <tr>
          <td class="paramkey">style:</td>
          <td></td>
          <td class="paramtype">(unsigned long)&nbsp;</td>
          <td class="paramname"> <em>style</em></td>
        </tr>
        <tr>
          <td class="paramkey">title:</td>
          <td></td>
          <td class="paramtype">(NSString *)&nbsp;</td>
          <td class="paramname"> <em>title</em></td>
        </tr>
        <tr>
          <td class="paramkey">delegate:</td>
          <td></td>
          <td class="paramtype">(sf::priv::WindowImplCocoa *)&nbsp;</td>
          <td class="paramname"> <em>delegate</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Make a new window wrapper according to the window settings , the video mode , the window style , the window title  and the sf window implementation delegate . 
<p>

<p>Definition at line <a class="el" href="GLKit_8mm-source.htm#l00445">445</a> of file <a class="el" href="GLKit_8mm-source.htm">GLKit.mm</a>.</p>

</div>
</div><p>
<a class="anchor" name="16a188d9f72e104f42847576b5d4e6c4"></a><!-- doxytag: member="WindowWrapper::initWithWindow:settings:delegate:" ref="16a188d9f72e104f42847576b5d4e6c4" args="(NSWindow *window,[settings] sf::WindowSettings &amp;params,[delegate] sf::priv::WindowImplCocoa *delegate)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">- (id) initWithWindow:           </td>
          <td></td>
          <td class="paramtype">(NSWindow *)&nbsp;</td>
          <td class="paramname"> <em>window</em></td>
        </tr>
        <tr>
          <td class="paramkey">settings:</td>
          <td></td>
          <td class="paramtype">(<a class="el" href="structsf_1_1WindowSettings.htm">sf::WindowSettings</a>&amp;)&nbsp;</td>
          <td class="paramname"> <em>params</em></td>
        </tr>
        <tr>
          <td class="paramkey">delegate:</td>
          <td></td>
          <td class="paramtype">(sf::priv::WindowImplCocoa *)&nbsp;</td>
          <td class="paramname"> <em>delegate</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Make a new window wrapper by importing  and according to the window settings  and the sf window implementation delegate   and  must not be null. 
<p>

<p>Definition at line <a class="el" href="GLKit_8mm-source.htm#l00466">466</a> of file <a class="el" href="GLKit_8mm-source.htm">GLKit.mm</a>.</p>

</div>
</div><p>
<a class="anchor" name="3e51f55f41fb1cb215f4131c27e546c5"></a><!-- doxytag: member="WindowWrapper::initWithWindow:settings:videoMode:style:title:delegate:" ref="3e51f55f41fb1cb215f4131c27e546c5" args="(NSWindow *window,[settings] sf::WindowSettings &amp;params,[videoMode] sf::VideoMode &amp;mode,[style] unsigned long style,[title] NSString *title,[delegate] sf::priv::WindowImplCocoa *delegate)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">- (id) initWithWindow:           </td>
          <td></td>
          <td class="paramtype">(NSWindow *)&nbsp;</td>
          <td class="paramname"> <em>window</em></td>
        </tr>
        <tr>
          <td class="paramkey">settings:</td>
          <td></td>
          <td class="paramtype">(<a class="el" href="structsf_1_1WindowSettings.htm">sf::WindowSettings</a>&amp;)&nbsp;</td>
          <td class="paramname"> <em>params</em></td>
        </tr>
        <tr>
          <td class="paramkey">videoMode:</td>
          <td></td>
          <td class="paramtype">(<a class="el" href="classsf_1_1VideoMode.htm">sf::VideoMode</a>&amp;)&nbsp;</td>
          <td class="paramname"> <em>mode</em></td>
        </tr>
        <tr>
          <td class="paramkey">style:</td>
          <td></td>
          <td class="paramtype">(unsigned long)&nbsp;</td>
          <td class="paramname"> <em>style</em></td>
        </tr>
        <tr>
          <td class="paramkey">title:</td>
          <td></td>
          <td class="paramtype">(NSString *)&nbsp;</td>
          <td class="paramname"> <em>title</em></td>
        </tr>
        <tr>
          <td class="paramkey">delegate:</td>
          <td></td>
          <td class="paramtype">(sf::priv::WindowImplCocoa *)&nbsp;</td>
          <td class="paramname"> <em>delegate</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Make a new window wrapper by importing  if it's not null and according to the window settings  and the sf window implementation delegate ; or by creating a new window if  is null. 
<p>
In this case  must therefore not be null and  must be valid.  must never be null 
<p>Definition at line <a class="el" href="GLKit_8mm-source.htm#l00487">487</a> of file <a class="el" href="GLKit_8mm-source.htm">GLKit.mm</a>.</p>

</div>
</div><p>
<a class="anchor" name="d7e57f85ddd9cabcfd83b6b3e4126f5b"></a><!-- doxytag: member="WindowWrapper::mouseInside" ref="d7e57f85ddd9cabcfd83b6b3e4126f5b" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">- (BOOL) mouseInside           </td>
          <td></td>
          <td class="paramname">          </td>
          <td>&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Return whether the mouse is on our window. 
<p>

<p>Definition at line <a class="el" href="GLKit_8mm-source.htm#l00726">726</a> of file <a class="el" href="GLKit_8mm-source.htm">GLKit.mm</a>.</p>

</div>
</div><p>
<a class="anchor" name="1d42a80d67788f419e84a243128b56b7"></a><!-- doxytag: member="WindowWrapper::mouseLocation" ref="1d42a80d67788f419e84a243128b56b7" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">- (NSPoint) mouseLocation           </td>
          <td></td>
          <td class="paramname">          </td>
          <td>&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Return the mouse location relative to the internal window. 
<p>

<p>Definition at line <a class="el" href="GLKit_8mm-source.htm#l00713">713</a> of file <a class="el" href="GLKit_8mm-source.htm">GLKit.mm</a>.</p>

</div>
</div><p>
<a class="anchor" name="b8dd2a8037d3ad624e165fb46cd3ee76"></a><!-- doxytag: member="WindowWrapper::setActive:" ref="b8dd2a8037d3ad624e165fb46cd3ee76" args="(bool flag)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">- (void) setActive:           </td>
          <td></td>
          <td class="paramtype">(bool)&nbsp;</td>
          <td class="paramname"> <em>flag</em>          </td>
          <td>&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Forward 'setActive' call the the OpenGL view. 
<p>

<p>Definition at line <a class="el" href="GLKit_8mm-source.htm#l00789">789</a> of file <a class="el" href="GLKit_8mm-source.htm">GLKit.mm</a>.</p>

</div>
</div><p>
<a class="anchor" name="e0d490eb68593290a188195ab713e230"></a><!-- doxytag: member="WindowWrapper::setPosition:" ref="e0d490eb68593290a188195ab713e230" args="(NSPoint pos)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">- (void) setPosition:           </td>
          <td></td>
          <td class="paramtype">(NSPoint)&nbsp;</td>
          <td class="paramname"> <em>pos</em>          </td>
          <td>&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Forward call to set the window position on screen. 
<p>

<p>Definition at line <a class="el" href="GLKit_8mm-source.htm#l00682">682</a> of file <a class="el" href="GLKit_8mm-source.htm">GLKit.mm</a>.</p>

</div>
</div><p>
<a class="anchor" name="f0748c0976f814e0891fd52eb1f641e4"></a><!-- doxytag: member="WindowWrapper::setSize:" ref="f0748c0976f814e0891fd52eb1f641e4" args="(NSSize size)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">- (void) setSize:           </td>
          <td></td>
          <td class="paramtype">(NSSize)&nbsp;</td>
          <td class="paramname"> <em>size</em>          </td>
          <td>&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Forward call to set the window size. 
<p>

<p>Definition at line <a class="el" href="GLKit_8mm-source.htm#l00697">697</a> of file <a class="el" href="GLKit_8mm-source.htm">GLKit.mm</a>.</p>

</div>
</div><p>
<a class="anchor" name="2f0777388a4da1415aac51879ab05597"></a><!-- doxytag: member="WindowWrapper::show:" ref="2f0777388a4da1415aac51879ab05597" args="(bool flag)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">- (void) show:           </td>
          <td></td>
          <td class="paramtype">(bool)&nbsp;</td>
          <td class="paramname"> <em>flag</em>          </td>
          <td>&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Close or open the window. 
<p>

<p>Definition at line <a class="el" href="GLKit_8mm-source.htm#l00750">750</a> of file <a class="el" href="GLKit_8mm-source.htm">GLKit.mm</a>.</p>

</div>
</div><p>
<a class="anchor" name="220a751d6f28e154784667bf0b0d75c2"></a><!-- doxytag: member="WindowWrapper::window" ref="220a751d6f28e154784667bf0b0d75c2" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">- (NSWindow *) window           </td>
          <td></td>
          <td class="paramname">          </td>
          <td>&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Return a reference to the internal Cocoa window. 
<p>

<p>Definition at line <a class="el" href="GLKit_8mm-source.htm#l00664">664</a> of file <a class="el" href="GLKit_8mm-source.htm">GLKit.mm</a>.</p>

</div>
</div><p>
<hr>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="GLKit_8h-source.htm">GLKit.h</a><li><a class="el" href="GLKit_8mm-source.htm">GLKit.mm</a></ul>
</div>

        <p id="footer">
            &nbsp;::&nbsp; Copyright &copy; 2007-2008 Laurent Gomila, all rights reserved &nbsp;::&nbsp;
            Documentation generated by <a href="http://www.doxygen.org/" title="doxygen website">doxygen 1.5.2</a> &nbsp;::&nbsp;
        </p>

    </body>
</html>
